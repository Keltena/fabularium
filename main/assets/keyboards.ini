#===============================================================================
# Custom Fabularium keyboard mappings
#-------------------------------------------------------------------------------
#
# PLEASE READ THE BELOW INSTRUCTIONS CAREFULLY BEFORE SENDING ME ANY BUG REPORTS!
#
# Use this file to define mappings for Fabularium's built-in keyboard, which you
# can then load in fab.ini via the command "keyboard <mapping name>". If you
# do not load any specific keyboard in fab.ini, Fabularium will default to its
# standard Latin-1 built-in keyboard. Also, as with all of Fabularium's configuration
# files, if you ever want to revert this file back to its original form, either
# delete it or rename it. When you switch out and back to Fabularium, the file
# will then be regenerated.
#
# Grammar
# -------
#
# This file expects the following grammar / structure. If you
# do not follow this grammar, Fabularium will either display a keyboard
# that behaves differently to what you expect, or revert back to
# the default Latin-1 keyboard.
#
# One or more mapping sections, starting with:
#
#    [ (mapping name) ]
#
# The mapping name is case insensitive - you can use any name EXCEPT "off", which is
# reserved (if the command "keyboard off" appears in fab.ini, no keyboard will be
# displayed - this can be a useful way to maximise precious screen real estate when
# playing games that do not require any typing, e.g. CYOA style games with hyperlinks).
# Within a mapping section, one or more keyboard layout sub-sections,  starting with
# the following. Specifying the (case insensitive) layout name is optional. Valid names
# are currently: 10x4 (10 columns x  4 rows, the default) and 11x4 (11 columns x 4 rows).
# If you have a good reason to add another layout to this list, please email me at
# tcowperapps@gmail.com.
#
#    < layout (layout name) >
#
# Within a layout subsection, one or more key mappings, each key on a separate line.
#
# The keys are mapped to the specified keyboard layout sequentially, from left to right
# and top to bottom. If you define more key mappings than there are keys in your selected
# layout, all mappings after the final key will simply be ignored. If you define less, the
# remaining keys will remain with their defaults. If you don't want to change a given key
# at all, just include a single |. To only change specific fields of a given key, leave
# those fields blank (e.g. | | "look" | "look" will skip the first two fields). To clear
# any field, use a blank string, "" (e.g. "" | "" | "look" | "look" will clear the first
# two fields).
#
# Each key mapping has up to 5 fields, delimited by the pipe (|) character, as follows:
#
#      1                       2                    3                       4
# (primary label)    |  (primary code(s))   | (secondary label)  |  (secondary code(s))
#
#      5             |         6            |       7
# (repeatable)          (primary size, SP)    (secondary size, SP)
#
# Other fields may be added in the future.
#
# Field 1 is the main (primary) label to display on the key. Field 2 is the code or
# sequence of codes you want submitted to the terp when that key is (short) pressed.
# Field 3 is the secondary (upper) label to display. Field 4 is the code or sequence
# of codes you want submitted to the terp when that key is long-pressed. Field 5
# indicates whether holding down the key should repeat the sequence given in field 2
# or not. Field 6 is the font size of the primary label in scale-independent pixels.
# Field 7 is the font size of the secondary label in scale-independent pixels.
#
# Fields 1-4 are simply comma-separated list of: strings (enclosed in double-quotes),
# hexadecimal Unicode values (e.g. see https://unicode-table.com), and/or special
# constants. If you don't know what the Unicode standard is, please read up on it first -
# e.g. https://wikipedia.org/wiki/Unicode).
#
# The permissible special constants are currently:
#
#   LEFT, RIGHT, UP, DOWN        =>   left, right, up and down arrows respectively
#   RETURN                       =>   submit command to terp, new line
#   DEL, ESC, TAB, PGUP, PGDOWN  =>   delete, escape, tab, page up and page down keys respectively
#   HOME, END                    =>   home, end keys respectively
#   F1, F2, ... F12              =>   the function keys
#   NEXT                         =>   tells the terp to display the next layout in this mapping (if there is one).
#   DBG                          =>   toggles Fabularium's in-game debug mode on and off
#
# When debug mode is on, the following behave as "hot keys" (case sensitive):
#
#   "S" => print details of all active streams
#   "W" => print details of all open windows
#   "F" => print current styles
#   "M" => print some information about memory usage
#
# Any constant may have a positive integer n appended, which signifies "repeat that constant n times.". E.g.
# NEXT3 is equivalent to NEXT,NEXT,NEXT.
#
# In strings you can also use a /n escape code (note: not \n!) to mean RETURN. Typically you would
# put this at the end of a string when you want that command passed immediately to the terp whenever
# the user presses the associated key.
#
# Note: the Unicode character U+FEFF (ZERO WIDTH NO-BREAK SPACE) is reserved by Fabularium
# to simplify its internal processing algorithm, so please don't use it in your layouts below
# (given that it has zero width and no visible glyph, why would you want to, anyway?).
#
# For field 5, specify an asterix (*) to indicate TRUE. As with the other fields blank
# means "leave unchanged from the default". Any other value means FALSE. Note if
# you set repeatability to TRUE, anything set for field 4 (long press codes) of that
# key is ignored.
#
# For fields 6 and 7, specify a positive integer between 1-100. Any other value
# will be ignored.
#
# The examples below demonstrates how, following the above rules, one can define:
#
#   1) a fancy Latin keyboard designed to minimise typing and using Unicode
#   symbols as icons;
#
#   2) a standard Cyrillic keyboard.
#
# To try out the first example, include "keyboard Latin" in your fab.ini file.
# For the second example, use "keyboard Cyrillic".
#===============================================================================

[ LATIN ]

< LAYOUT 10x4 >

# Row 1
||"1"|31
||"2"|32
||"3"|33
||"4"|34
||"5"|35
||"6"|36
||"7"|37
||"8"|38
||"9"|39
||"0"|30

# Row 2
||"⇖"|"northwest/n"|||16
||"⇑"|"north/n"|||16
||"⇗"|"northeast/n"|||16
||"▲"|"up/n"|||12
||"GET"|"get "|||10
||"DROP"|"drop "|||10
||"OPEN"|"open "|||10
||"CLOSE"|"close "|||9
||"INV"|"inventory/n"|||10

# Row 3
"QUIT"|"quit/n"|"⇐"|"west/n"||10|16
||1F441|"look/n"|||12
||"⇒"|"east/n"|||16
||"▼"|"down/n"|||12
||"EXAM"|"examine "|||10
||"TALK"|"talk to "|||10
||"GIVE"|"give "|||10
|
232B|DEL|||*|22

# Row 4
"SCORE"|"score/n"|"⇙"|"southwest/n"||10|16
||"⇓"|"south/n"|||16
||"⇘"|"southeast/n"|||16
""|" "|||*|30
1F4BE|"save/n"|"LOAD"|"restore/n"||15|10
"❓"|"help/n"|"UNDO"|"undo/n"||15|10
"✔"|RETURN


[ CYRILLIC ]

< LAYOUT 11x4 >

# Row 1
439 | 439 | "1" | 31
"ц" | 446 | "2" | 32
"у" | 443 | "3" | 33
"к" | 43A | "4" | 34
"е" | 435 | "5" | 35
"н" | 43D | "6" | 36
"г" | 433 | "7" | 37
"ш" | 448 | "8" | 38
"щ" | 449 | "9" | 39
"з" | 437 | "0" | 30
"х" | 445

# Row 2
"ф" | 444 | "!" | 21
"ы" | 44B | """ | 22
"в" | 432 | ";" | 3B
"а" | 430 | "%" | 25
"п" | 43F | ":" | 3A
"р" | 440 | "?" | 3F
"о" | 43E | "(" | 28
"л" | 43B | ")" | 29
"д" | 434 | "-" | 2D
"ж" | 436 | "+" | 2B
"э" | 44D | "=" | 3D

# Row 3
2318 | NEXT
"я" | 44F | "O",4E | "транскрипт вкл", RETURN    # turn on transcripting
"ч" | 447 | "OFF" | "транскрипт выкл/n"          # turn off transcripting
"с" | 441 | "DBG" | DBG
"м" | 43C
"и" | 438
"т" | 442
"ь" | 44C
"б" | 431
"ю" | 44E
232B | DEL | | | *

# Row 4
25B2 | UP   | | | * | 20
25BC | DOWN | | | * | 20
"," | 2C,20 | "." | 2E
2423 | " " | | | * | 30
25C0 | LEFT   | | | * | 20
25B6 | RIGHT | | | * | 20
23CE | RETURN | | | | 30

< LAYOUT 11x4 >

# Row 1
"Й" | 419 | "1" | 31
"Ц" | 426 | "2" | 32
"У" | 423 | "3" | 33
"К" | 41A | "4" | 34
"Е" | 415 | "5" | 35
"Н" | 41D | "6" | 36
"Г" | 413 | "7" | 37
"Ш" | 428 | "8" | 38
"Щ" | 429 | "9" | 39
"З" | 417 | "0" | 30
"Х" | 425

# Row 2
"Ф" | 424
"Ы" | 42B
"В" | 412
"А" | 410
"П" | 41F
"Р" | 420
"О" | 41E
"Л" | 41B
"Д" | 414
"Ж" | 416
"Э" | 42D

# Row 3
2318 | NEXT
"Я" | 42F
"Ч" | 427
"С" | 421
"М" | 41C
"И" | 418
"Т" | 422
"Ь" | 42C
"Б" | 411
"Ю" | 42E
232B | DEL | | | *

# Row 4
25B2 | UP   | | | * | 20
25BC | DOWN | | | * | 20
"," | 2C,20 | "." | 2E
2423 | " " | | | * | 30
25C0 | LEFT   | | | * | 20
25B6 | RIGHT | | | * | 20
23CE | RETURN | | | | 30
